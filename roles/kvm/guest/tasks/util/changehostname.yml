---
- set_fact:
     ANSIBLE_HOST_KEY_CHECKING: False

- name: Wait for time to start
  pause:
    seconds: 15

- name: "Can we reach new guest by old hostname: {{ from_guest.domain }}"
  command: ping -c1 "{{ from_guest.domain }}"
  register: ping_result
  ignore_errors: yes


- name: add guest domain and hostname to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '127\.0\.1\.1[ \t]+{{ from_guest.domain }}[ \t]+{{ from_guest.hostname }}'
    line: '127.0.1.1  {{ to_guest.value.domain }}    {{ to_guest.value.hostname }}'
    state: present
  delegate_to: "{{ from_guest.domain }}"
  when: ping_result is success

- name: "add hostname to /etc/hostname: {{ from_guest.hostname }}"
  lineinfile:
    dest: /etc/hostname
    regexp: '^{{ from_guest.hostname }}'
    line: '{{ to_guest.value.hostname }}'
    state: present
  delegate_to: "{{ from_guest.domain }}"
  when: ping_result is success

- name: Install avahi to allow .local doamin to be resolable
  apt:
    name: avahi-daemon
    state: present
  delegate_to: "{{ from_guest.domain }}"
  when: ping_result is success

- import_tasks: reboot.yml
  vars:
    name: "{{ to_guest.key }}"
  when: ping_result is success

- set_fact:
     ANSIBLE_HOST_KEY_CHECKING: True

- name: Attach to Bridge Network Interface
  when: hostvars[inventory_hostname][guest.key + '_unreachable'] and guest.value.network_interface
  include_tasks: attach_network.yml
  when: ping_result is success